{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Hamza\\\\Documents\\\\Shop\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hamza\\\\Documents\\\\Shop\\\\src\\\\login\\\\AdminLogin.js\";\nimport React, { useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nfunction AdminLogin() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loggedIn = _useState6[0],\n      setLoggedIn = _useState6[1];\n\n  var handleEmailChange = function handleEmailChange(event) {\n    setEmail(event.target.value);\n  };\n\n  var handlePasswordChange = function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n\n    if (email === 'supermarket@supermarket.com' && password === 'supermarket') {\n      // Rediriger l'utilisateur vers la page principale après la connexion réussie\n      setLoggedIn(true);\n    } else {\n      alert('Identifiants incorrects');\n    }\n  }; // Rediriger l'utilisateur vers la page principale après la connexion réussie\n\n\n  if (loggedIn) {\n    return React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Interface d'administration\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    value: email,\n    onChange: handleEmailChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Mot de passe:\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: handlePasswordChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Se connecter\")));\n}\n\nexport default AdminLogin;","map":{"version":3,"sources":["C:\\Users\\Hamza\\Documents\\Shop\\src\\login\\AdminLogin.js"],"names":["React","useState","Redirect","Route","AdminLogin","email","setEmail","password","setPassword","loggedIn","setLoggedIn","handleEmailChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAEA,SAASC,UAAT,GAAsB;AAAA,kBACMH,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACbI,KADa;AAAA,MACNC,QADM;;AAAA,mBAEYL,QAAQ,CAAC,EAAD,CAFpB;AAAA;AAAA,MAEbM,QAFa;AAAA,MAEHC,WAFG;;AAAA,mBAGYP,QAAQ,CAAC,KAAD,CAHpB;AAAA;AAAA,MAGbQ,QAHa;AAAA,MAGHC,WAHG;;AAKpB,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnCN,IAAAA,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACH,KAAD,EAAW;AACtCJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACJ,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAIZ,KAAK,KAAK,6BAAV,IAA2CE,QAAQ,KAAK,aAA5D,EAA2E;AACzE;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACLQ,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;AACF,GARD,CAboB,CAuBpB;;;AACA,MAAIT,QAAJ,EAAc;AACZ,WAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,KAAK,EAAEX,KAHT;AAIE,IAAA,QAAQ,EAAEM,iBAJZ;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,KAAK,EAAEJ,QAHT;AAIE,IAAA,QAAQ,EAAEQ,oBAJZ;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,EAqBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF,CAFF,CADF;AA4BD;;AAED,eAAeX,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nfunction AdminLogin() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (email === 'supermarket@supermarket.com' && password === 'supermarket') {\r\n      // Rediriger l'utilisateur vers la page principale après la connexion réussie\r\n      setLoggedIn(true);\r\n    } else {\r\n      alert('Identifiants incorrects');\r\n    }\r\n  };\r\n\r\n  // Rediriger l'utilisateur vers la page principale après la connexion réussie\r\n  if (loggedIn) {\r\n    return <Route exact path=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Interface d'administration</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Mot de passe:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n"]},"metadata":{},"sourceType":"module"}